---
- name: Install Gitlab deps
  yum: name={{ item }} state=latest
  with_items:
    - postfix
  tags: [ 'gitlab' , 'yum' ]

- name: Enable services
  service: name={{ item }} state=started enabled=yes
  with_items:
    - postfix
  tags: gitlab

- name: Configure mail relay
  lineinfile: dest=/etc/postfix/main.cf
              state=present
              insertafter='#relayhost = '
              line='relayhost = [{{ mail_relay }}]'
  notify: restart postfix
  tags: gitlab

- name: Check if Gitlab is already installed
  command: rpm -q gitlab
  register: gitlab_status
  ignore_errors: true
  tags: [ "gitlab" , "gitlabupdate" ]

- name: Get Gitlab CE Omnibus rpm
  get_url: url=https://downloads-packages.s3.amazonaws.com/gitlab-{{ gitlab_version }}.el6.x86_64.rpm
           dest=/tmp/gitlab-{{ gitlab_version }}.el6.x86_64.rpm
  when: gitlab_status.stdout != "gitlab-{{ gitlab_version }}.el6.x86_64"
  tags: [ "gitlab" , "gitlabupdate"]

- name: Stop unicorn for Gitlab update
  command: gitlab-ctl stop unicorn
  when: gitlab_status.stdout != "gitlab-{{ gitlab_version }}.el6.x86_64" and gitlab_status.rc == 0
  tags: [ "gitlab" , "gitlabupdate"]

- name: Stop sidekiq for Gitlab update
  command: gitlab-ctl stop sidekiq
  when: gitlab_status.stdout != "gitlab-{{ gitlab_version }}.el6.x86_64" and gitlab_status.rc == 0
  tags: [ "gitlab" , "gitlabupdate"]

- name: Backup Gitlab database before updating
  command: gitlab-rake gitlab:backup:create
  when: gitlab_status.stdout != "gitlab-{{ gitlab_version }}.el6.x86_64" and gitlab_status.rc == 0
  tags: [ "gitlab" , "gitlabupdate"]

- name: Install Gitlab
  command: rpm -Uvh /tmp/gitlab-{{ gitlab_version }}.el6.x86_64.rpm
  when: gitlab_status.stdout != "gitlab-{{ gitlab_version }}.el6.x86_64"
  tags: [ "gitlab" , "gitlabupdate"]

- name: Remove Gitlab rpm
  file: state=absent
        path=/tmp/gitlab-{{ gitlab_version }}.el6.x86_64.rpm
  when: gitlab_status.stdout != "gitlab-{{ gitlab_version }}.el6.x86_64"
  tags: [ "gitlab" , "gitlabupdate"]

- name: Reconfigure Gitlab
  command: gitlab-ctl reconfigure
  when: gitlab_status.stdout != "gitlab-{{ gitlab_version }}.el6.x86_64"
  tags: [ "gitlab" , "gitlabupdate"]

- name: Start Gitlab
  command: gitlab-ctl reconfigure
  when: gitlab_status.stdout != "gitlab-{{ gitlab_version }}.el6.x86_64" and gitlab_status.rc == 0
  tags: [ "gitlab" , "gitlabupdate"]

- name: Create /etc/gitlab
  file: state=directory
        path=/etc/gitlab
        owner=root
        group=root
        mode=0700
  tags: gitlab

- name: Copy gitlab.rb
  template: src=gitlab.rb.j2
            dest=/etc/gitlab/gitlab.rb
            owner=root
            group=root
            mode=0600
  # notify: reconfigure gitlab
  tags: gitlab

- name: Set port to 443
  lineinfile: "dest=/var/opt/gitlab/gitlab-rails/etc/gitlab.yml state=present regexp='^\\s+port:\\s(80|443)' line='    port: {{ https_port }}'"
  notify: restart gitlab
  tags: gitlab

- name: Set HTTPS to true
  lineinfile: "dest=/var/opt/gitlab/gitlab-rails/etc/gitlab.yml state=present regexp='^\\s+https:' line='    https: true'"
  notify: restart gitlab
  tags: gitlab


- name: Copy SSL gitlab.crt
  copy: src=gitlab.crt
        dest=/etc/pki/tls/private/gitlab.crt
        owner=root
        group=root
        mode=0644
  tags: gitlab

- name: Copy SSL gitlab.key
  template: src=gitlab.key.j2
            dest=/etc/pki/tls/private/gitlab.key
            owner=root
            group=root
            mode=0600
  tags: gitlab

- name: Copy nginx SSL config
  template: src=gitlab-ssl.conf
            dest=/var/opt/gitlab/nginx/etc/gitlab-ssl.conf
            owner=root
            group=root
            mode=0644
  notify: restart gitlab nginx
  tags: gitlab

- name: Point nginx.conf at gitlab-ssl.conf
  lineinfile: dest=/var/opt/gitlab/nginx/etc/nginx.conf
              state=present
              regexp='include.*/gitlab-.*.conf'
              line='  include /var/opt/gitlab/nginx/etc/gitlab-ssl.conf;'
  notify: restart gitlab nginx
  tags: gitlab
